stages:
  - build
  - test
  - release
  - deploy
  - cleanup

variables:
  CONTAINER_RELEASE_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

.sharedBeforeScript: &sharedBeforeScript
  before_script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY

build:
  stage: build
  <<: *sharedBeforeScript
  script:
    - npm install --unsafe-perm
    - ls -lha packages/t3n-storybook/
    - docker build --pull -t $CONTAINER_RELEASE_IMAGE .

layers:
  stage: test
  script:
    - docker history --no-trunc $CONTAINER_RELEASE_IMAGE

feature:
  stage: release
  when: manual
  except:
    - master
    - stage
  <<: *sharedBeforeScript
  script:
    - npm install --unsafe-perm
    - docker build --pull -t $CONTAINER_RELEASE_IMAGE .
    - docker push $CONTAINER_RELEASE_IMAGE
    - docker rmi -f $(docker images --filter=reference="$CONTAINER_RELEASE_IMAGE" -q)

release:
  stage: release
  only:
    - master
    - stage
  <<: *sharedBeforeScript
  script:
    - docker push $CONTAINER_RELEASE_IMAGE

deploy_master:
  only:
    - master
  stage: deploy
  environment: master
  script:
    - 'curl -X POST "https://kubr.yeebase.net/yeebase.kubr/webhook/deploy?apikey=RM8vKrnr5XBRLvHKW8Qt7gqO&name=Live"'

cleanup:
  stage: cleanup
  script:
    - docker rmi -f $(docker images --filter=reference="$CONTAINER_RELEASE_IMAGE" -q)
  when: always
